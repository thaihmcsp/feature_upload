# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}      

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: thaihmcsp/test_upload:latest        

    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
    # - name: Install Dependencies
    #   run: npm install

    # - run: npm ci
    # - run: npm run build --if-present
    # - run: npm test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Container via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker pull thaihmcsp/test_upload:latest
            docker stop test_upload || true
            docker rm test_upload || true
            docker run -d --name test_upload -p 3007:80 /test_upload:latest